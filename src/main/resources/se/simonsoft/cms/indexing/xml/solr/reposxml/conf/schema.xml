<?xml version="1.0" ?>
<!--

    Copyright (C) 2009-2017 Simonsoft Nordic AB

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- Repos Search XML element index -->

<schema name="reposxml" version="1.2">

	<fields>
		<field name="_version_" type="long" indexed="true" stored="true"/>
	
		<!-- 
		Uniqueness and support for delete/reindex/overwrite
		-->
		<field name="id" type="string"
			indexed="true" stored="true"
			multiValued="false" required="true" />

		<!-- 
		CMS item fields.
		-->
		<field name="path"     type="string" indexed="true"  stored="true"  multiValued="false"/>
		<field name="pathname" type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathext"  type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathdir"  type="string" indexed="true"  stored="false" multiValued="false"/>
		<field name="pathin"   type="string" indexed="true"  stored="false" multiValued="true"/>
		<field name="pathfull"  type="string" indexed="true"  stored="true" multiValued="false"/><!-- stored during development -->
		<field name="rev"  type="long" indexed="true" stored="true" multiValued="false"/>
		<field name="revt" type="date" indexed="true" stored="true" multiValued="false"/>
		<field name="urlid"      type="string" indexed="false" stored="true" multiValued="false"/><!-- Logical ID (not indexed here) -->
		<field name="repo"       type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="repoid"     type="string" indexed="true" stored="true" multiValued="false"/>		
		<field name="repoparent" type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="repohost"   type="string" indexed="true" stored="true" multiValued="false"/>
		<dynamicField name="prop_*" type="string" indexed="true" stored="true" multiValued="false"/>
		
		<!-- classifies item as belonging to 1+ areas of the file hierarchy, such as "trunk"/"branch"/"tag"/"release"/"translation"/"template" -->
		<!-- consider adding docValues="true" on patharea and pathmain (added in repositem). -->
		<field name="patharea" type="string" indexed="true" stored="true" multiValued="true" />
		<!-- identifies the "main" area, i.e. main branch, i.e trunk with the purpose of filtering out endless amount of copies, but does not recognize if copies have changed or not -->
		<field name="pathmain" type="boolean" indexed="true" stored="true" multiValued="false" />		
		
		<!-- Custom tags from added handlers, normally used for filtering -->
		<field name="flag" type="string" indexed="true" stored="true" multiValued="true"/>
		
		<!-- 
		Index time analysis of the quality of the element for suggest/assist/reuse features, higher number is better, <0 is discouraging.
		-->
		<field name="reusevalue" type="int" indexed="true" stored="true" multiValued="false" />
		<field name="reuseready" type="int" indexed="true" stored="true" multiValued="false" />
		<!-- 
		List of RIDs that appear more than once in the element and children. 
		Can not identify if the element itself is a duplicate.
		-->
		<field name="reuseridduplicate" type="content_checksums" indexed="true" stored="true" multiValued="false" />		
		<!-- 
		List of RIDs with reusevalue > 0.
		-->
		<field name="reuseridreusevalue" type="content_checksums" indexed="true" stored="true" multiValued="false" />		
		<!-- 
		List of Release Checksums corresponding to RIDs with reusevalue > 0.
		-->
		<field name="reuse_c_sha1_release_descendants" type="string" indexed="true" stored="true" multiValued="true" />
		<!-- 
		Map Release Checksums to RIDs (with reusevalue > 0).
		Dynamic part is 2 characters of checksum, each field containing one or many strings "checksum RID".
		-->
		<dynamicField name="reuse_rid_*" type="string" indexed="true" stored="true" multiValued="true" />

		<!-- 
		Fields used for sorting in Pretranslate, copyfield in order to control the storage/performance. 
		-->
		<field name="reuseriddocument" docValues="true" type="string" indexed="true" stored="false" multiValued="false"/>	
		<field name="reuseridelement" docValues="true" type="string" indexed="true" stored="false" multiValued="false"/>	
		<copyField source="prop_abx.ReleaseId" dest="reuseriddocument"/>
		<copyField source="a_cms.rid" dest="reuseridelement"/>

		<!--
		Checksums of any field or of contents that are not indexed
		-->
		<field name="c_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />

		<!--
		Doctype
		-->
		<field name="typename"   type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="typepublic" type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="typesystem" type="string" indexed="true" stored="true" multiValued="false"/>

		<!--
		XML element name including namespace
		-->
		<field name="name" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!-- 
		Attributes, solr should accept with any valid xml
		attribute name including those containing ":"
		-->
		<dynamicField name="a_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
			
		<!-- 
		Joinable references to root, parent (null if root), previous sibling (null if first), ancestors, next sibling (null if last)
		-->
		<field name="id_r" type="string" indexed="true" stored="true" multiValued="false" />
		<field name="id_p" type="string" indexed="true" stored="true" multiValued="false" />
		<field name="id_s" type="string" indexed="true" stored="true" multiValued="false" />
		<field name="id_a" type="string" indexed="true" stored="true" multiValued="true" />
		<!-- next sibling, can join the other way <field name="id_n" type="string" indexed="true" stored="true" /> -->
		
		<!-- 
		Position in DOM, indexes starting from 1 like in XSL
		-->	
		<field name="depth" type="int" indexed="true" stored="true" multiValued="false" />
		<field name="position" type="int" indexed="true" stored="true" multiValued="false" />
		<!-- 
		Position in tree for uniqueness within document, .N appended for each level, 1-based
		-->
		<field name="pos" type="string" indexed="true" stored="true" required="true" multiValued="false" />
		
		<!-- 
		Ancestor attributes, excluding self, near overrides far
		-->
		<dynamicField name="aa_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		
		<!-- 
		"Inherit" attributes, including self, near overrides far
		-->
		<dynamicField name="ia_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />

		<!-- Namespaces introduced on this element. -->
		<dynamicField name="ns_*" type="string" indexed="true" stored="true" multiValued="false" />
		<!-- Namespaces inherited and introduced on this elemen. -->
		<dynamicField name="ins_*" type="string" indexed="true" stored="true" multiValued="false" />
		<!-- Namespaces unused below this element. -->
		<field name="ns_unused" type="string" indexed="true" stored="true" multiValued="true" />
			
		<!--
		Parent element name
		-->
		<field name="pname" type="string"
			indexed="true" stored="true"
			multiValued="false" />		
		<!-- 
		Ancestor element names, excluding self
		-->
		<field name="aname" type="string"
			indexed="true" stored="true"
			multiValued="true" />
			
		<!--
		Root element name
		-->
		<field name="rname" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!--
		Root element attributes
		-->
		<dynamicField name="ra_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		
		<!--
		Preceding sibling's name 
		-->
		<field name="sname" type="string"
			indexed="true" stored="true"
			multiValued="false" />
		<!--
		Preceding sibling's attributes 
		-->
		<dynamicField name="sa_*" type="string"
			indexed="true" stored="true"
			multiValued="false" />
			
		<!--
		Verbatim element and its contents.
		Should preferably be accessed through an abstraction so reading can be
		changed if index grows too big.
		-->
		<field name="source" type="string" indexed="false" stored="true" multiValued="false" />
		
		<!--
		Text content of element including children, XML normalized.
		-->
		<field name="text" type="string" indexed="true" stored="true" multiValued="false" />
		
		<!--
		Different types of text analysis and matching.
		-->
		<field name="text_g" type="text_general" indexed="true" stored="false" multiValued="false" />
		<field name="text_spell" type="text_spell" indexed="true" stored="false" multiValued="false" />
		<field name="text_assist" type="text_complete" indexed="true" stored="false" multiValued="false" />
		
		<!-- 
		Special filtered extractions, source - checksum - word count.
		Store sources? - No, because it is lots of data and verbatim source can most likely be used.
		               - Assist uses source_reuse because it is preferable to remove attributes and normalize before insert.
		Index sources? - Maybe not because we need the analysis to be done before the checksum anyway.
		-->
		<dynamicField name="source_*" type="string" indexed="false" stored="true" multiValued="false" /><!-- stored during development -->
		<dynamicField name="c_*" type="string" indexed="true" stored="true" multiValued="false" />
		<dynamicField name="count_*" type="long" indexed="true" stored="true" multiValued="false" />
		
		<!-- 
		Fields related to checksums of child elements
		-->
		<dynamicField name="content_c_*" type="content_checksums" indexed="true" stored="true" multiValued="false" />
		
		<!--
		Different transformations of the original XML.
		-->
		<dynamicField name="transform_*" type="string" indexed="false" stored="true" multiValued="false" />
		
		<copyField source="text" dest="text_g"/>
		<copyField source="text" dest="text_spell"/>
		<copyField source="text" dest="text_assist"/>
	</fields>

	<!-- field to use to determine and enforce document uniqueness. -->
	<uniqueKey>id</uniqueKey>

	
	<types>	
		<fieldtype name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true" />
		
		<fieldType name="int" class="solr.IntPointField" docValues="true" omitNorms="true" positionIncrementGap="0"
			sortMissingLast="false"/><!-- sort missing first to get root and first siblings first -->
		<fieldType name="long" class="solr.LongPointField" docValues="true" positionIncrementGap="0"/>
		<fieldType name="date" class="solr.DatePointField" docValues="true" positionIncrementGap="0"/>
		<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>

		<!-- (solr example field) -->
		<!-- A general text field that has reasonable, generic cross-language defaults: 
			it tokenizes with StandardTokenizer, removes stop words from case-insensitive 
			"stopwords.txt" (empty by default), and down cases. At query time only, it 
			also applies synonyms. -->
		<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
				<!-- CMS idea: maybe we can store synonyms, or even better that a phrase replaces other phrases, in indexed XML somewhere -->
				<!-- <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true" />  -->
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- author assist -->
		<fieldType class="solr.TextField" name="text_spell" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>	
		<fieldType class="solr.TextField" name="text_complete">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
		<fieldType class="solr.TextField" name="text_phrases">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<!-- When outputting unigrams, single words will be included. -->
				<filter class="solr.ShingleFilterFactory" minShingleSize="2" maxShingleSize="5" outputUnigrams="true"/>
			</analyzer>
		</fieldType>
		
		<!-- Content checksums -->
		<fieldType class="solr.TextField" name="content_checksums">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
			</analyzer>
		</fieldType>
	</types>
		
</schema>

